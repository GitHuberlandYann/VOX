Project Requirements:
    DONE - create procedural terain in openGL
    DONE - RENDER MUST BE SMOOTH. Avoid the freeze frames at all cost
	DONE - user should be able to visit at least 16384*256*16384 cubes
	- Your program must be able to run for hours without eating the whole memory or slowing down
    DONE - Your program will have to run in full screen mode
	- generate terrains such as hills, mountains or caves when the user goes underground
    DONE - This generation has to be determinist
    - Each visited piece of terrain must be saved in the memory up to some limit you will set yourself and after which you can start deleting cubes from the memory
    DONE - In the open, minimal distance render will be 160 cube
    DONE - at least 2 different textures and 2 different types of cube
    DONE - FoV must be 80 degrees
    - set up a skybox

    - camera
        DONE - mouse must be able to control it on 2 axis
        DONE - 4 keys that will make it go forth, back, right and left in according to the camera rotation
        DONE - camera speed should be set around 1 cube/second
        DONE - key that will multiply this speed by 20
    
    - BONUS
        DONE - Have a render distance always higher than 14 ??? guess 1 is 16 blocs
        DONE - fps counter is displayed (UI)
        DONE - Render is smooth and doesnâ€™t freeze, event at x20 speed
        - Being able to delete blocks with the mouse (+put some down I want)
        - different biomes

TODOS:
	- water if air && level < 64
    - better caves
    - biomes
    - chunk border fix
    - skybox
    - save block changed
    - main menu
        - play
            - random seed / custom seed
        - load -> save world in json
        - settings
            - render dist
            - speed
        - quit

IN PROGRES:
    - obstacle detection for physics + game mode
    - https://stackoverflow.com/questions/15821969/what-is-the-proper-way-to-modify-opengl-vertex-buffer
    - https://stackoverflow.com/questions/54583368/how-to-draw-multiple-objects-in-opengl-using-multiple-vao-and-vbo

DONE:
	- pthread chunk creation
	- write stuff on screen
    - better spacing between characters displayed
    - full screen mode
    - mouse movements
    - inventory


Some info:
  - Sprinting allows the player to move at around 5.612 meters/second, which is 30 percent faster than the normal walking speed of around 4.317 m/s, jumping while sprinting allows the player to move with an average speed of 7.127 m/s. 
  - render dist 20, fsan, no move, seed 123456u, 2fps, 1fps, 31fps, 17fps, 34fps, 33fps..
  - all I need is here https://mcasset.cloud
  - ray casting in voxel grid: http://www.cse.yorku.ca/~amana/research/grid.pdf
  - how to fix broken everything in wsl: https://stackoverflow.com/questions/66497147/cant-run-opengl-on-wsl2/66506098#66506098