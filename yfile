Project Requirements:
    DONE - create procedural terain in openGL
    DONE - RENDER MUST BE SMOOTH. Avoid the freeze frames at all cost
	DONE - user should be able to visit at least 16384*256*16384 cubes
	- Your program must be able to run for hours without eating the whole memory or slowing down
    DONE - Your program will have to run in full screen mode
	- generate terrains such as hills, mountains or caves when the user goes underground
    DONE - This generation has to be determinist
    - Each visited piece of terrain must be saved in the memory up to some limit you will set yourself and after which you can start deleting cubes from the memory
    DONE - In the open, minimal distance render will be 160 cube
    DONE - at least 2 different textures and 2 different types of cube
    DONE - FoV must be 80 degrees
    - set up a skybox

    - camera
        DONE - mouse must be able to control it on 2 axis
        DONE - 4 keys that will make it go forth, back, right and left in according to the camera rotation
        DONE - camera speed should be set around 1 cube/second
        DONE - key that will multiply this speed by 20
    
    - BONUS
        DONE - Have a render distance always higher than 14 ??? guess 1 is 16 blocs
        DONE - fps counter is displayed (UI)
        DONE - Render is smooth and doesn’t freeze, even at x20 speed
        DONE - Being able to delete blocks with the mouse (+put some down I want)
        - different biomes

TODOS:
	- water if air && level > surface_level && level < 64
    - skybox
    - save block changed
    - main menu
        - play
            - random seed / custom seed
        - load -> save world in json
        - settings
            - render dist
            - speed
        - quit
    - items on ground after break
    - Sound https://www.ambiera.com/irrklang/tutorials.html
    - hitbox around player for collisions
    - player arm in survival mode
    - hide faces not oriented towards us // face culling ..
    - nether
    - fix fall going through blocks + fix jump into block above head
    - right/left click and drag in inventory
    - speedrun option : goal is to hold a diamond pickaxe in your hand in the shortest time -> leaderboard stored in json

IN PROGRES:
    - biomes
    - https://stackoverflow.com/questions/15821969/what-is-the-proper-way-to-modify-opengl-vertex-buffer
    - https://stackoverflow.com/questions/54583368/how-to-draw-multiple-objects-in-opengl-using-multiple-vao-and-vbo

DONE:
	- pthread chunk creation
    - only display chunks in fieldview + little offset
	- write stuff on screen
    - better spacing between characters displayed
    - full screen mode
    - mouse movements
    - inventory
    - better caves
    - obstacle detection for physics + game mode
    - player gravity
    - better fall damage
    - placing sand = gravity
    - sand falls if nothing under, even in caves
    - make gravel behave like sand
    - flower on grass only
    - flowers destroyed if block underneath destroyed
    - leaves touchy
    - inventory block count
    - block break animation
    - chunk border fix
    - FOV changed on isRunning change
    - stop fov run if player idle
    - load menu
    - inventory menu
    - crafting menu


Some info:
  - Sprinting allows the player to move at around 5.612 meters/second, which is 30 percent faster than the normal walking speed of around 4.317 m/s, jumping while sprinting allows the player to move with an average speed of 7.127 m/s. 
  - render dist 20, fsan, no move, seed 123456u, 2fps, 1fps, 31fps, 17fps, 34fps, 33fps..
  - all I need is here https://mcasset.cloud
  - ray casting in voxel grid: http://www.cse.yorku.ca/~amana/research/grid.pdf
  - how to fix broken everything in wsl: https://stackoverflow.com/questions/66497147/cant-run-opengl-on-wsl2/66506098#66506098
      - lauch VcXsrv; xcalc worksn't
      - DISPLAY=:0; xcalc works
  
  - Overworld biome generation is based on 6 parameters:
    Temperature, Humidity (aka. Vegetation), Continentalness (aka. Continents), Erosion, Weirdness (aka. Ridges) and Depth, which are calculated with 6 density functions.
    Except "depth", the other 5 parameters are based on only horizontal coordinates. 
    - The TEMPERATURE parameter is a noise parameter used only in biome generation and do not affect terrain generation.
        - The range of temperature is about from -2.31 to +2.31. But biome intervals are defined only from -1.0 to +1.0. 5 levels
        - -2.31~-0.45, -0.45~-0.15, -0.15~0.2, 0.2~0.55, 0.55~2.31
    - The HUMIDITY (also known as vegetation) parameter is a noise parameter used only in biome generation and do not affect terrain generation.
        - The range of humidity is about from -1.76 to +1.76. But biome intervals are defined only from -1.0 to +1.0. 5 levels
        - -1.76~-0.35, -0.35~-0.1, -0.1~0.1, 0.1~0.3, 0.3~1.76
    - The CONTINENTALNESS (also known as continents) parameter is used to decide between ocean/beach/land biomes.
        It affects the terrain height during terrain generation. The larger the continentalness, the higher the average terrain height.
        And when the continentality is extremely low, the terrain height also becomes higher, in order to generate mushroom fields in the center of the ocean.
        - The range of continentalness is about from -3.80 to +3.80 . Biome intervals are defined only from -1.2 to +1.0.
            - -3.80~-1.05, the mushroom fields biome is generated;
            - when it is between -1.05~-0.455, deep ocean biomes are generated;
            - when -0.455~-0.19, ocean biomes are generated;
            - when -0.19~3.80, inland biomes are generated.
            - For inland biomes, continentalness values are further subdivided into 4 types:
                - coast (-0.19~-0.11)
                - near-inland (-0.11~0.03)
                - mid-inland (0.03~0.3)
                - far-inland (0.3~1.0).
    - The EROSION parameters mainly affect inland terrain during terrain generation. The higher the erosion at a location, the lower the terrain height and the flatter the terrain.
        - The range of erosion is about from -2.52 to +2.52. Biome intervals are defined only from -1.0 to +1.0. 6 levels
        - -2.52~-0.78, -0.78~-0.375, -0.375~-0.2225, -0.2225~0.05, 0.05~0.45, 0.45~0.55, 0.55~2.52
    - The WEIRDNESS (also known as ridges) parameter affects whether to generate a weirder biome or not.
        (If the weirdness value is greater than 0, the generated biome becomes weirder.
        For example, using the variant of the Jungle biome — Bamboo Jungle; not using beach biomes when on the coast. )
        - The range of weirdness is about from -2.97 to +2.97. But biome intervals are defined only from -1.0 to +1.0.
        - The PV ("PEAKS AND VALLEYS", aka. "ridges folded") value is calculated through the formula 1 − | 3 | w e i r d n e s s | − 2 |
            - When the weirdness value is between -1.0 and 1.0, the PV values are divided into 5 levels:
                If the PV is -1.0~-0.85, the PV level is "Valleys";
                If -0.85~-0.6, "Low Slice";
                If -0.6~0.2, "Mid Slice";
                If 0.2~0.7, "High Slice";
                If 0.7~1, "Peaks".
                Not that the PV value is defined no matter what the weirdness is, but these 5 PV levels are defined only when weirdness is between -1.0 and 1.0.
    - DEPTH is used for cave generation .. not sure I'll use it for now