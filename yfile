Project Requirements:
    DONE - create procedural terain in openGL
    DONE - RENDER MUST BE SMOOTH. Avoid the freeze frames at all cost
	DONE - user should be able to visit at least 16384*256*16384 cubes
	     - Your program must be able to run for hours without eating the whole memory or slowing down
    DONE - Your program will have to run in full screen mode
	     - generate terrains such as hills, mountains or caves when the user goes underground
    DONE - This generation has to be determinist
         - Each visited piece of terrain must be saved in the memory up to some limit you will set yourself and after which you can start deleting cubes from the memory
    DONE - In the open, minimal distance render will be 160 cube
    DONE - at least 2 different textures and 2 different types of cube
    DONE - FoV must be 80 degrees
	DONE - set up a skybox

    - camera
        DONE - mouse must be able to control it on 2 axis
        DONE - 4 keys that will make it go forth, back, right and left in according to the camera rotation
        DONE - camera speed should be set around 1 cube/second
        DONE - key that will multiply this speed by 20
    
    - BONUS
        DONE - Have a render distance always higher than 14 ??? guess 1 is 16 blocs
        DONE - fps counter is displayed (UI)
        DONE - Render is smooth and doesnâ€™t freeze, even at x20 speed
        DONE - Being able to delete blocks with the mouse (+put some down I want)
             - different biomes

TODOS:
    - biomes
	- fix light spread problems caused by recurse limitation (when torches are next to each other)
	- double chests
	- fire
	- lantern
	- campfire
	- ladder
	- stone wall
	- bed
	- add light diff on levers faces
	- fix faces open/closed trapdoors not matching
	- fix touchy stairs still displaying touchy faces
	- blocks with oriented light occlusion (ie slabs, stairs)
	- fix fallingBlockEntity falling on torch
	- enchanting table
	- stars at night
	- save entities, redstone_schedule, .. to json
	- entity shadow
	- rework clouds
	- commands /say /me /save /setblock /kill
	- add menus to json to reduce in-code hardcoding
	- add meshes to json to reduce in-code hardcoding
	- toggle don't draw chunks behind player in Settings
    - Sound https://www.ambiera.com/irrklang/tutorials.html
	- upon world generation, place player on ground by using continentalness
	- water ligth level
    - lava + nether
	- universal use of tps instead of deltatimes ?
	- divide chunk in 16 subsections ?
	
	IN PROGRES:
	- bow and arrow
	- mobs
	- multiplayer
	
	TODAY:
	- check // TODO restore
	
	SHORTTERM memory:
	- replace glm with own small lib
	- display block_hit s name and details as a 2D window
	- skin customization menu
	
	DONE:
	- pthread chunk creation
    - skybox
    - only display chunks in fieldview + little offset
	- write stuff on screen
	- mailbox system to display anouncements on screen
	- commands /help /seed /time /gamemode /clear /tp(/teleport) /sp(spawnpoint)
	- historic of past messages and commands
	- moveable cursor on text input
	- better border chunk handling (trees)
    - better spacing between characters displayed
    - full screen mode
    - mouse movements
    - inventory
	- 3D items in inventory
	- chests
	- furnace
    - better caves
    - obstacle detection for physics + game mode
    - hide faces not oriented towards us
    - save block changed into backup map
	- smooth partial collision instead of teleportation
	- fix <slab to slab transition makes you go up 1 full block>
	- change applyGravity to make use of height in collision box and avoid for loops
	- have Menu/UI::add_item_value use s_blocks[type]->addItem() instead
    - player gravity
	- change physics in water
    - hitbox around player for collisions - https://minecraft.fandom.com/wiki/Hitbox#List_of_entity_hitboxes
	- slabs
	- stairs
	- doors
	- signs
	- trapdoors
	- button
	- lever
	- redstone
	- redstone lamp
	- redstone torch
	- redstone dust
	- repeater
	- comparator
	- centralized redstone schedule to get rid of chunk order
	- item frame
	- book, book_and_quill, written_book
	- lectern
	- anvil + named items
	- pistons
	- observers
	- fences
    - items on ground after break
	- item number color/placement/size in ingame menus
	- hitbox change + no fall on sneak
    - fix fall going through blocks + fix jump into block above head
	- strafing speed reduction + rework movements
    - better fall damage
    - placing sand = gravity
    - sand falls if nothing under, even in caves
	- sand now turns to falling block entity during fall
	- use block s hardness to compute time to break instead of hardcoding it
	- get rid of blockAtlas in favor of 1000s of 16x16 textures
	- entities !
	- player 3D model (F5 mode)
	- particles !
	- 3D items on ground
    - player arm in survival mode
	- flint and steel
	- TNT, explosions
    - make gravel behave like sand
    - flower on grass only
    - flowers destroyed if block underneath destroyed
	- custom hitboxes https://en.wikipedia.org/wiki/Line-plane_intersection
    - leaves touchy
    - inventory block count
    - right click and drag in inventory
    - tools durabitlity
	- ATag field in t_item to store tool durabitlity or book_and_quill s content or enchantments
    - block break animation
	- time 20 min = 1 day
	- time pause on menu
	- no time pause on inventory/furnace
    - chunk border fix
	- overall lighting (corner shade, sky light + decrease 1 per block = dark in caves + block light)
	- limit floodfill algo for lighting
	- smooth lighting using corner max
	- update skylight on leave break
	- torches can be placed on walls
	- add top and bottom faces to torches
	- clear inventory on world save and quit
	- fix hidden ui on world change
    - FOV changed on isRunning change
    - stop fov run if player idle
	- water if air && level > surface_level && level < 64
	- Water update when add/rm blocks around
	- windows
	- wheat + bread + farming
	- Hunger bar update + eating
	- tick rate + block update
	- grass spread
	- sapling growth
	- dirt paths
	- fluid at border
    - Water buckets
	- water flow
	- display item name and details upon mouse hover in menus
	- custom resolution in settings + original resolution by using opengl
	- settings fullScreen on off, ie call glfwSetWindowMonitor(glfwGetPrimaryMonitor/NULL)
	- add depth component to all hud elements to draw text on item on text of other item
	- settings particles on off
	- clouds
	- gui size
	- Worldedit mod
	- //brush tool to place/rm lots of blocks in a wormy manner
	- //gameOfLife cmd with worldEdit to see game of life in 3D
	- A* Pathfinding algo to be used by mobs
	- Zombies
	- Skeletons
	- centralize settings and save/load them in file
	- resource packs
	- Game modes:
	- survival
		- creative
		- adventure
		- Menus:
		- main menu
		- world selection menu
		- world creation menu
		- load menu
		- pause menu
		- options menu
		- video settings menu
		- Controls Menu
		- resource packs menu
		- inventory menu
		- crafting menu
			- chest menu
			- furnace menu
			- chat menu
			- death menu


Controls (QWERTY):
	- WASD: player movement
	- left_control: run
	- left_shift: sneak
	- space: jump
	- mouse / arrows: camera movement
	- left_click: break block, pick block in inventroy, navigate through menus
	- right_click: place block, pick half blocks in inventory, place 1 block in inventory + drag = place 1 accross several cells
	- middle_click: pick block in gamemode creative
	- mouse scroll / 0123456789: scrolls through hotbar
	- esc: opens up menu. pauses game. closes any open menu
	- backspace: exit program
	- []: change time speed
	- G: toggle gamemode
	- F: toggle wireframe display (warning fps drop)
	- Q: drop selected item
	- E: open inventory
	- F1: display hotbar
	- F2: save screenshot under .ppm file format
	- F3: togle debug screen
	- F5: change camera placement
	- O: toggle block highlight
	- C: zoom
	- T: open chat
	- +-: change render distance
	- kp_* kp_/: change gui size

Shaders:
	default - used for all blocks and flowers, x[0:255] y[0:255] 		Vhalf
	sky - used for clouds and water and glass, animation frames         Xhalf
	skybox - used to draw atmosphere, astal bodies, doesn't use textures
	ui - used for menus, hud                                            Xhalf
	text - draws character                                              Xhalf
	item - used to draw 3d items in inventory, x[0:255] y[0:255]        Xhalf
	particle - used to draw particles, x[0:255] y[0:255]                Vhalf
	model - used to draw models (for mobs and player)

Textures:
	0: settings::strings::block_atlas
	1: settings::strings::ascii_atlas
	2: array:
		0: settings::strings::ui_atlas
		1: settings::strings::tex_inventory
		2: settings::strings::tex_crafting_table
		3: settings::strings::tex_furnace
		4: settings::strings::tex_chest
	3: array:
		0: settings::strings::tex_zombie
		1: settings::strings::tex_skeleton
		2: settings::strings::tex_player
	4: settings::strings::water_still
	5: settings::strings::water_flow
	6: settings::strings::particle_atlas
	7: glass texture, tmp mesure

Shaders x Textures:
	default	 x 0
	sky		 x 7, 4, 5
	skybox	 x none
	ui		 x 2
	text	 x 1
	item	 x 0
	particle x 6
	model	 x 3


Some info:
  - Sprinting allows the player to move at around 5.612 meters/second, which is 30 percent faster than the normal walking speed of around 4.317 m/s, jumping while sprinting allows the player to move with an average speed of 7.127 m/s. 
  - It takes 1.61 seconds to eat most foods
  - all I need is here https://mcasset.cloud
  - ray casting in voxel grid: http://www.cse.yorku.ca/~amana/research/grid.pdf
  - how to fix broken everything in wsl: https://stackoverflow.com/questions/66497147/cant-run-opengl-on-wsl2/66506098#66506098
      - lauch VcXsrv; xcalc nowork
      - DISPLAY=:0; xcalc yeswork
  - https://stackoverflow.com/questions/15821969/what-is-the-proper-way-to-modify-opengl-vertex-buffer
  - https://stackoverflow.com/questions/54583368/how-to-draw-multiple-objects-in-opengl-using-multiple-vao-and-vbo

  - Game tick 20 times per second
  - Block update
	on each game tick, in each 16x16x16 cube 3 blocks are randomly selected
  - Grass block
	For a dirt block to accept grass from a nearby grass block, the following requirements must be met:
		The dirt block receiving grass must be within a 3x5x3 range of the source grass block where the source block is in the center of the second topmost layer of that range.
		The source grass block must have a light level of 9 or brighter directly above it.
		The block directly above the dirt block must allow light to pass through it and hit the dirt block, even though the actual light level does not matter. That means blocks that partially let light through such as stairs and slabs must not have their light-blocking side(s) facing the dirt block.
		The block directly above the dirt block must not be lava, water, or a waterlogged variant of a block.
	When grass is random ticked, it spreads by checking 4 blocks within range and converts any dirt blocks selected into grass.
  - CROPS
	During every update (block update), a crop plant gets a chance to grow to the next stage with the exact chance depending on conditions:

    As noted above, growth requires a light level of at least 9 in the block above the plant.
    The growth probability is 1/(floor(25/points) + 1), where "points" is as follows:
        The farmland block the crop is planted on gives 2 points if dry or 4 if hydrated.
        For each of the 8 blocks around the block on which the crop is planted, dry farmland gives 0.25 points, and hydrated farmland gives 0.75.
            Note that if a field is bordered with anything besides more farmland, the plants at the edge grow more slowly.
    Having a crop of the same type diagonally from another of the same type will halve the growth rates of both crops. This does not stack.
  
  - Overworld biome generation is based on 6 parameters:
    Temperature, Humidity (aka. Vegetation), Continentalness (aka. Continents), Erosion, Weirdness (aka. Ridges) and Depth, which are calculated with 6 density functions.
    Except "depth", the other 5 parameters are based on only horizontal coordinates. 
    - The TEMPERATURE parameter is a noise parameter used only in biome generation and do not affect terrain generation.
        - The range of temperature is about from -2.31 to +2.31. But biome intervals are defined only from -1.0 to +1.0. 5 levels
        - -2.31~-0.45, -0.45~-0.15, -0.15~0.2, 0.2~0.55, 0.55~2.31
    - The HUMIDITY (also known as vegetation) parameter is a noise parameter used only in biome generation and do not affect terrain generation.
        - The range of humidity is about from -1.76 to +1.76. But biome intervals are defined only from -1.0 to +1.0. 5 levels
        - -1.76~-0.35, -0.35~-0.1, -0.1~0.1, 0.1~0.3, 0.3~1.76
    - The CONTINENTALNESS (also known as continents) parameter is used to decide between ocean/beach/land biomes.
        It affects the terrain height during terrain generation. The larger the continentalness, the higher the average terrain height.
        And when the continentality is extremely low, the terrain height also becomes higher, in order to generate mushroom fields in the center of the ocean.
        - The range of continentalness is about from -3.80 to +3.80 . Biome intervals are defined only from -1.2 to +1.0.
            - -3.80~-1.05, the mushroom fields biome is generated;
            - when it is between -1.05~-0.455, deep ocean biomes are generated;
            - when -0.455~-0.19, ocean biomes are generated;
            - when -0.19~3.80, inland biomes are generated.
            - For inland biomes, continentalness values are further subdivided into 4 types:
                - coast (-0.19~-0.11)
                - near-inland (-0.11~0.03)
                - mid-inland (0.03~0.3)
                - far-inland (0.3~1.0).
    - The EROSION parameters mainly affect inland terrain during terrain generation. The higher the erosion at a location, the lower the terrain height and the flatter the terrain.
        - The range of erosion is about from -2.52 to +2.52. Biome intervals are defined only from -1.0 to +1.0. 6 levels
        - -2.52~-0.78, -0.78~-0.375, -0.375~-0.2225, -0.2225~0.05, 0.05~0.45, 0.45~0.55, 0.55~2.52
    - The WEIRDNESS (also known as ridges) parameter affects whether to generate a weirder biome or not.
        (If the weirdness value is greater than 0, the generated biome becomes weirder.
        For example, using the variant of the Jungle biome â€” Bamboo Jungle; not using beach biomes when on the coast. )
        - The range of weirdness is about from -2.97 to +2.97. But biome intervals are defined only from -1.0 to +1.0.
        - The PV ("PEAKS AND VALLEYS", aka. "ridges folded") value is calculated through the formula 1 âˆ’ | 3 | w e i r d n e s s | âˆ’ 2 |
            - When the weirdness value is between -1.0 and 1.0, the PV values are divided into 5 levels:
                If the PV is -1.0~-0.85, the PV level is "Valleys";
                If -0.85~-0.6, "Low Slice";
                If -0.6~0.2, "Mid Slice";
                If 0.2~0.7, "High Slice";
                If 0.7~1, "Peaks".
                Not that the PV value is defined no matter what the weirdness is, but these 5 PV levels are defined only when weirdness is between -1.0 and 1.0.
    - DEPTH is used for cave generation .. not sure I'll use it for now

    - objdump -d --disassemble=_main -Mintel vox
    - nm vox | grep <function>
    - export MallocStackLogging=1 into system("leaks vox");

_blocks:
	- all - reserved bits:
		- 0x00000FFF type ==> 4096 possible blocks
		- 0x00001000 NotVisible (1 << 12)
		- 0x0000E000 Orientation (0x7 << 13)
		- 0x00010000 strongly powered (1 << 16)
		- 0x00020000 weakdy   powered (1 << 17) (typo on purpose, meaning by redtone dust)
		- 0x00040000 activated (1 << 18) - redstone componants
		- 0x00080000 adventure_block (1 << 19) - only blocks you can break in adventure mode
		- 0x00F00000 signal strength (0xF << 20)
		- 0xFF000000 custom info (0xFF << 24)
	- Furnace 0x7 << 9 == orientation, 1 << 18 == furnace ON/OFF
	- table craft 0x7 << 9 == orientation
	- torch 0x7 << 9 == orientation
	- Farmland 0x1 << 24 == WET_FARMLAND, 0x7 << 25 == moisture
	- Leaves 0x1 << 24 == hand placed
	- saplings 0x1 << 24 == growth stage
	- crops 0x7 << 24 == growth stage, 7 is ripe
	- water 0x7 << 24 == water level, 0 is water source
	- slabs 1 << 24 top_slab
	- stairs 0x7 << 9 == orientation, 0xF << 24 == corners, 1 << 28 top_stairs (ie upside down)
	- doors 0x7 << 9 == orientation, 1 << 24 == half, 1 << 25 == hinge, 1 << 26 == open
	- trapdoors 0x7 << 9 == orientation, 1 << 24 == half, 1 << 25 == open
	- fence 0xF << 24 == 'arms'
	- glass panes 0xF << 24 == 'arms'
	- lever 0x7 << 9 == orientation, 0x3 << 24 == placement(wall, ceiling, floor)
	- button 0x7 << 9 == orientation, 0x3 << 24 == placement(wall, ceiling, floor)
	- item frame 0x7 << 9 == orientation, 0x3 << 24 == placement(wall, ceiling, floor), 1 << 26 locked, 1 << 27 notVisible
	- redstone lamp 1 << 18 lit
	- redstone dust 0xF << 20 strength 0xFF << 24 'arms'
	- repeater 0x7 << 9 orientation, 0x3 << 24 delay, 1 << 27 locked, 1 << 16 lit
	- comparator 0x7 << 9 orientation, 1 << 24 mode, 0xF << 20 strength
	- piston 0x7 << 9 orientation, 1 << 18 activated, 1 << 24 inMovement
	- piston_head 1 << 24 sticky head
	- moving_piston 1 << 28 retracting

	- powered blocks: (1 << 16)
		doors, trapdoors, lever, button, redstone lamp, repeater


Hierarchy:

 Class				First created by 	Owned by					Ref by										Allocation
OpenGL_Manager		main.cpp			main.cpp					WorldEdit, Player							stack allocated
Server				OpenGL_Manager		main.cpp																unique_ptr
Skybox				OpenGL_Manager		OpenGL_Manager															unique_ptr
Menu				OpenGL_Manager		OpenGL_Manager				Player										unique_ptr
Inventory			Player				Player						Menu, UI, Entity, WorldEdit					unique_ptr
UI					OpenGL_Manager		OpenGL_Manager				Menu, Inventory, Player						unique_ptr
Chat				UI					UI, Menu					WorldEdit									shared_ptr
Text				UI					UI, Chat, Menu															shared_ptr
Camera				OpenGL_Manager		OpenGL_Manager				Menu, UI									unique_ptr
Socket				OpenGL_Manager		OpenGL_Manager, Server													shared_ptr

DayCycle			no - Singleton
WorldEdit			no - Singleton
Settings			no - Singleton

HUD depth: [0:255] 255 being furthest, 0 closest. mapped to [0:0.001] in shaders
	- debug str                     200
	- back chat msgs                210
	- chat msgs                     200
	- inventory at bottom
		- back                      190
		- items                     180 (3 in item_vertex shader)
		- item str                  170
	- menu occlusion                150
	- menu bars                     130
	- menu str                      120
	- menu ingame
		- back                      130
		- item                      120 (2 in item_vertex shader)
		- item str                  110
		- held item                 60 (1 in item_vertex shader)
		- held item str             50
	- controls menu
		- binds bars                130
		- binds str                 120
		- top and bottom occlusion  100
		- top and bottom bars       90
		- top and bottom text       80

- Mobs: https://minecraft.fandom.com/wiki/Spawn
	Most mobs have a spawning cycle once every game tick (1/20 of a second),
		but passive mobs have only one spawning cycle every 400 game ticks (20 seconds).
	Most animals spawn within chunks when they are generated.
	Same as random block update, 3 spawn points are generated by 16x16x16 chunk
	Each individual spawn attempt succeeds only if ALL of the following conditions are met:
		- There must be no players or the world spawn point within a 24 radius block distance (spherical) of the spawning block.
		- Must be within a 128 radius block sphere around the player.
		- The number of loaded mobs of that type must be less than the mob cap for that type.
		- The mob s collision box must not intersect with a solid block.
		- The mob s collision box upon spawning must not collide with another collision box.
			A mob cannot spawn inside of anything that would collide with it upon spawning.
		// - /gamerule doMobSpawning is true
	List goes on, but only for hostile mobs:
		- The difficulty must not be Peaceful.
		- the block directly below it must have a solid, opaque, top surface (this includes upside down slabs, upside down stairs, and others) or be soul sand or a slime block.
		- the mob s collision box must not collide with any liquid.
		- The block above the spawning block must be transparent. (ie head block)
		- block light level must be 0 and sky light must be 7 or below.

- Mobs: despawn
	- A mob that has had no player within 32 blocks of it for more than 30 seconds, or 10 seconds if in low light levels,
		has a 1/800 chance of despawning on each game tick
	- immediately if no player is within 128 blocks of it
	- hostile despawns if the difficulty is set to Peaceful
	- Mobs are persistent, meaning they do not despawn and do not count toward the mob cap, when they:
		- are a passenger to another mob or entity.
		// - have had something added to their inventory, including having something dispensed upon them.
		- have been named with a name tag.

- Mobs: 7 categories
	// - passive: the block directly below the spawning block must be a grass block.
	// - water creature: (squids and dolphins)
	// - underground water creature: (glow squids)
	// - axolotls
	// - water ambient: (all 4 types of fish)
	// - ambient: (bat).
	- hostile:
		Mob cap is 70.
		- Zombie:
			- spawn on solid block in group 2-4
			- pursue player if on sight from 35 blocks away
			- burns under direct sunlight (ie 15), stop burning at light level 11 or in water
			- same health as player 20 (10 hearths)
			- damage: easy 2.5, normal 3, hard 4.5
			- drops 1-2 rotten flesh, 2.5% drop 1 iron ingot OR 1 carrot OR 1 potato
			- damaged zombie mobs call all other zombies within a 67x21x67 to 111x21x111 area centered on the attacked zombie to target the attacker.
			- In Hard difficulty, zombies can spawn additional zombies to "help" when damaged.
				Each zombie has a "likeliness to call reinforcements" statistic ranging from 0-10%.
				When the zombie is damaged by an entity or is damaged while targeting an entity, up to 50 attempts are made to randomly choose a spawn location
				(0 or Â±7-40 blocks away in all three axes) that is above a block with a solid top surface, has light level 0, has no players within 7 blocks,
				and has no colliding entities or blocks, at which to spawn the reinforcement.
				Both the damaged zombie and the new zombie has a 5 percentage point penalty to their "likeliness to call reinforcement" stat,
				preventing infinite zombies from spawning this way.
		- Skeleton:
			- pursue player if on sight from 16 blocks away
			- sprint if more than 14 blocks away
			- if clear line of sight and 15 blocks away or less from player, takes aim
			- shoots one arrow every 2 sec on easy and normal, 1/sec on hard
			- if less than 4 blocks away from player, strafe to dodge
